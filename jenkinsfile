pipeline {
  agent any

  tools {
    nodejs "node24"
  }

  environment {
    
    SONARQUBE_SCANNER_HOME = tool 'sonarscanner'
  }

  stages {
    stage("Clean Workspace") {
      steps { cleanWs() }
    }

    stage("Git Checkout") {
      steps { git 'https://github.com/pradeeshan/simple-web-app.git' }
    }

    stage("Install Dependencies") {
      steps { bat "npm install" }
    }

    stage('SonarQube Analysis') {
      steps {
        
        withSonarQubeEnv('sonarqube') {
          
          bat "%SONARQUBE_SCANNER_HOME%\\bin\\sonar-scanner.bat"
        }
      }
    }

    stage('Quality Gate') {
      steps {
        timeout(time: 5, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
      }
    }

    stage('Test') {
      failFast true
      parallel {
        stage('Unit Tests')     { steps { bat "npm run test:unit"       } }
        stage('Integration Tests') { steps { bat "npm run test:integration" } }
      }
    }

    stage("Build Docker Image") {
      steps { bat "docker build -t pradeeshan/simple-web-app:v3 ." }
    }

    stage("Tag & Push to DockerHub") {
      steps {
        withDockerRegistry(credentialsId: 'docker') {
          bat "docker push pradeeshan/simple-web-app:v3"
        }
      }
    }

    stage("Deploy to Container") {
      steps {
        bat '''
          docker stop simple-web-app || echo "No running container"
          docker rm simple-web-app  || echo "No existing container"
        '''
        bat "docker run -d --name simple-web-app -p 3000:3000 pradeeshan/simple-web-app:v3"
      }
    }
  }
}
